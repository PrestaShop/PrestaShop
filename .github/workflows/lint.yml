name: Lint
on: [push, pull_request]
jobs:
  stylelint:
    name: SCSS Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: BackOffice Theme `new-theme`
        run: cd ./admin-dev/themes/new-theme && npm install && npm run scss-lint

      - name: BackOffice Theme `default`
        run: cd ./admin-dev/themes/default && npm install && npm run scss-lint

      - name: FrontOffice Theme `classic`
        run: cd ./themes/classic/_dev && npm install && npm run scss-lint
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
            node-version: '10.x'

      -   name: Validate npm config
          run: >-
            (cd admin-dev/themes/default && npm ci)
            && (cd admin-dev/themes/new-theme && npm ci)
            && (cd themes && npm ci)
            && (cd themes/classic/_dev && npm ci)

      - name: BackOffice Theme `default`
        run: cd ./admin-dev/themes/default && npm install && npm run lint

      - name: BackOffice Theme `new-theme`
        run: cd ./admin-dev/themes/new-theme && npm install && npm run lint

      - name: FrontOffice Theme `classic`
        run: cd ./themes/ && npm install && npm run lint && cd ./classic/_dev && npm install && npm run lint

  yamllint:
    name: YAML Lint
    runs-on: ubuntu-latest
    steps:
      -   name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: '7.4'
              extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml
      -   uses: actions/checkout@v2

      -   name: Get Composer Cache Directory
          id: composer-cache
          run: |
              echo "::set-output name=dir::$(composer config cache-files-dir)"

      -   name: Cache Composer Directory
          uses: actions/cache@v2
          with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: |
                  ${{ runner.os }}-composer-

      -   name: Composer Install
          run: composer install --ansi --prefer-dist --no-interaction --no-progress --quiet

      -   name: Run Lint Yaml on `src`
          run: php bin/console lint:yaml src

      -   name: Run Lint Yaml on `app`
          run: php bin/console lint:yaml app

      -   name: Run Lint Yaml on `themes`
          run: php bin/console lint:yaml themes

      -   name: Run Lint Yaml on `.t9n.yml`
          run: php bin/console lint:yaml .t9n.yml

  twiglint:
      name: Twig Lint
      runs-on: ubuntu-latest
      steps:
      -   name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: '7.4'
              extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml
      -   uses: actions/checkout@v2

      -   name: Get Composer Cache Directory
          id: composer-cache
          run: |
              echo "::set-output name=dir::$(composer config cache-files-dir)"

      -   name: Cache Composer Directory
          uses: actions/cache@v2
          with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: |
                  ${{ runner.os }}-composer-

      -   name: Composer Install
          run: composer install --ansi --prefer-dist --no-interaction --no-progress --quiet

      -   name: Run Lint Twig
          run: php bin/console lint:twig src/PrestaShopBundle/Resources/views/
