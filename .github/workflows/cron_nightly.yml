name: Nightly

on:
  schedule:
    - cron:  '0 1 * * *'
  # Allows maintainers to trigger nightly manually
  # workflow_dispatch:

jobs:
  nightly:
    runs-on: ubuntu-latest
    name: Nightly
    env:
      GC_INSTANCE_NAME: ${{ secrets.GC_INSTANCE_NAME }}
      GC_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
      GC_SERVICE_KEY: ${{ secrets.GC_SERVICE_KEY }}
      GC_ZONE: ${{ secrets.GC_ZONE }}
      GH_BRANCH: 'develop'
      INSTANCE_TYPE: 'develop'
      NIGHTLY_TOKEN: ${{ secrets.NIGHTLY_TOKEN }}

    steps:
      -   uses: actions/checkout@v2
          with:
            fetch-depth: 0

      -   name: Setup PHP
          uses: shivammathur/setup-php@v1
          with:
            php-version: '7.3'
            extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv

      -   name: Initialize GCloud Service Key
          run: echo $GC_SERVICE_KEY > $HOME/gcloud-service-key.json

      -   uses: google-github-actions/setup-gcloud@master
          with:
            service_account_key: ${{ env.GC_SERVICE_KEY }}
            project_id: ${{ env.GC_PROJECT_ID }}

      -   name: Create directory
          run: mkdir -p /tmp/ps-release

      -   name: Create build
          run: php tools/build/CreateRelease.php --destination-dir=/tmp/ps-release

      -   name: Rename file
          run: cd /tmp/ps-release
              && today=`date +%Y-%m-%d-`; for i in *; do mv $i $today$GH_BRANCH-$i; done
              && cd -

      -   name: Upload to Google Cloud Storage (GCS)
          run: gsutil cp -r "/tmp/ps-release" gs://prestashop-core-nightly

      -   name: Stop the instance if started
          run: gcloud compute instances stop --zone $GC_ZONE "${GC_INSTANCE_NAME}-${INSTANCE_TYPE}"

      -   name: Add metadata & Start instance
          run: |
            gcloud compute instances add-metadata "${GC_INSTANCE_NAME}-${INSTANCE_TYPE}" --zone $GC_ZONE --metadata=NIGHTLY_TOKEN=$NIGHTLY_TOKEN && \
            gcloud compute instances add-metadata "${GC_INSTANCE_NAME}-${INSTANCE_TYPE}" --zone $GC_ZONE --metadata=GH_BRANCH=$GH_BRANCH && \
            gcloud compute instances add-metadata "${GC_INSTANCE_NAME}-${INSTANCE_TYPE}" --zone $GC_ZONE --metadata-from-file startup-tests-script=tests/UI/scripts/run-nightly-tests.sh && \
            gcloud compute instances add-metadata "${GC_INSTANCE_NAME}-${INSTANCE_TYPE}" --zone $GC_ZONE --metadata-from-file startup-reports-script=tests/UI/scripts/run-nightly-reports.sh && \
            gcloud compute instances start --zone $GC_ZONE "${GC_INSTANCE_NAME}-${INSTANCE_TYPE}"
