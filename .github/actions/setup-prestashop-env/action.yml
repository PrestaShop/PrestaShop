name: Setup PrestaShop Environment
description: Setup Apache, PHP, Mysql, and Node to run PrestaShop on local
inputs:
  php-version:
    required: true
    description: PHP version
  mysql-version:
    required: true
    description: Mysql version
  mysql-database:
    required: true
    description: Database to create
  mysql-root-password:
    required: true
    description: Mysql root password
  node-version:
    required: true
    description: Node version
  npm-version:
    required: true
    description: NPM version
  ps-auto-install:
    required: false
    description: True to install Prestashop
    default: "false"
  ps-dev-mode:
    required: false
    description: False to disable dev mode
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv, simplexml, pdo, mysql

    - name: Setup Apache
      shell: bash
      run: sudo bash ./.github/workflows/sanity/setup-apache.sh ${{ github.workspace }} ${{ matrix.php }}

    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        mysql version: ${{ inputs.mysql-version }}
        mysql database: ${{ inputs.mysql-database }}
        mysql root password: ${{ inputs.mysql-root-password }}

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: |
          admin-dev/**/package-lock.json
          tests/**/package-lock.json
          themes/**/package-lock.json

    - name: Setup NPM
      shell: bash
      run: npm i -g npm@${{ inputs.npm-version }}

    - name: Get Composer Cache Directory
      shell: bash
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer Directory
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Composer install and build assets
      shell: bash
      run: make

    - name: Setup permission and restart apache
      shell: bash
      run: |
        sudo chown www-data:www-data -R ${{ github.workspace }} && \
        sudo mkdir -p /var/lib/php/sessions && \
        sudo chown www-data:www-data -R /var/lib/php/sessions && \
        sudo service apache2 restart

    - name: Disable dev mode
      if: inputs.ps-dev-mode == 'false'
      shell: bash
      run: |
        echo "Disabling DEV mode ...";
        sed -ie "s/define('_PS_MODE_DEV_', true);/define('_PS_MODE_DEV_',\ false);/g" config/defines.inc.php

    - name: Install PrestaShop
      if: inputs.ps-auto-install == 'true'
      shell: bash
      run: |
        sudo runuser -g www-data -u www-data -- php install-dev/index_cli.php \
        ---domain="localhost" --db_server="127.0.0.1:3306" --db_name="${{ inputs.mysql-database }}" \
        --db_user="root" --db_password=${{ inputs.mysql-root-password }} \
         --prefix="tst_" --firstname="Marc" --lastname="Beier" \
        --password="$ADMIN_PASSWD" --email="demo@prestashop.com" \
        --language="en" --country="fr"
