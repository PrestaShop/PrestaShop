{#**
 * 2007-2018 PrestaShop
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to http://www.prestashop.com for more information.
 *
 * @author    PrestaShop SA <contact@prestashop.com>
 * @copyright 2007-2018 PrestaShop SA
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 * International Registered Trademark & Property of PrestaShop SA
 *#}
{% use '@PrestaShop/Admin/TwigTemplateForm/bootstrap_4_horizontal_layout.html.twig' %}

{%- block form_widget_compound -%}

  {%- if form.parent is empty -%}
    {{ form_errors(form) }}
  {%- endif -%}
  {{- block('form_rows') -}}
  {{- form_rest(form) -}}
{%- endblock form_widget_compound -%}

{% block form_row -%}
  {% spaceless %}
    <div class="form-group row {% if (not compound or force_error|default(false)) and not valid %} has-error{% endif %}">
      {{ form_label(form) }}
      <div class="col-sm">
        {% if not valid %}
          {% set class = 'is-invalid' %}
        {% else %}
          {% set class = '' %}
        {% endif %}

        {{ form_widget(form, {'attr': {'class': class}}) }}
        {{ form_errors(form) }}
      </div>
    </div>
  {% endspaceless %}
{%- endblock form_row %}

{%- block form_label -%}
  {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' form-control-label')|trim}) %}

  {% if label is not same as(false) -%}
    {% if not compound -%}
      {% set label_attr = label_attr|merge({'for': id}) %}
    {%- endif %}
    {% if required -%}
      {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
    {%- endif %}
    {% if label is empty -%}
      {%- if label_format is not empty -%}
        {% set label = label_format|replace({
          '%name%': name,
          '%id%': id,
        }) %}
      {%- else -%}
        {% set label = name|humanize %}
      {%- endif -%}
    {%- endif -%}
    <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ translation_domain is same as(false) ? label|raw : label|raw }}
    {% if label_attr['tooltip'] is defined %}
      {% set placement = label_attr['tooltip_placement'] is defined ? label_attr['tooltip_placement'] : 'top' %}
      <i class="icon-question" data-toggle="pstooltip" data-placement="{{ placement }}"
         title="{{ label_attr['tooltip'] }}"></i>
    {% endif %}

    {% if label_attr['popover'] is defined %}
      {% set placement = label_attr['popover_placement'] is defined ? label_attr['popover_placement'] : 'top' %}
      <span class="help-box" data-toggle="popover" data-placement="{{ placement }}"
            data-content="{{ label_attr['popover'] }}"></span>
    {% endif %}
    </label>

  {%- endif -%}
{%- endblock form_label -%}

{% block form_errors -%}
  {% if errors|length > 0 -%}
      {%- for error in errors -%}
        <div class="invalid-feedback"> {{
          error.messagePluralization is null
          ? error.messageTemplate|trans(error.messageParameters, 'form_error')
          : error.messageTemplate|transchoice(error.messagePluralization, error.messageParameters, 'form_error')
          }}
        </div>
      {%- endfor -%}
  {%- endif %}
{%- endblock form_errors %}
