{#**
 * 2007-2018 PrestaShop
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to http://www.prestashop.com for more information.
 *
 * @author    PrestaShop SA <contact@prestashop.com>
 * @copyright 2007-2018 PrestaShop SA
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 * International Registered Trademark & Property of PrestaShop SA
 *#}

{% trans_default_domain 'Admin.Advparameters.Feature' %}

{% set dataConfigurationForm = importDataConfigurationForm.import_data_configuration %}

{{ form_start(dataConfigurationForm) }}
<div class="card">
  <h3 class="card-header">
    <i class="material-icons">list</i> {{ 'Match your data'|trans }}
  </h3>
  <div class="card-block row">
    <div class="card-text">
      <div class="row">
        <div class="col">
          <div class="alert alert-info" role="alert">
            <p class="alert-text">
              {{ 'Please match each column of your source file to one of the destination columns.'|trans }}
            </p>
          </div>
        </div>
      </div>
      <div class="form-group row">
        <label class="form-control-label">
          {{ 'Load a data matching configuration'|trans }}
        </label>
        <div class="col-sm">
          <div class="form-row">
            <div class="col">
              {{ form_widget(dataConfigurationForm.matches) }}
            </div>
            <div class="col">
              <button
                class="btn btn-primary-reverse btn-outline-primary light-button js-load-match">
                {#todo: implement#}
                <i class="material-icons">settings</i> {{ 'Load'|trans({}, 'Admin.Actions') }}
              </button>
              <button
                class="btn btn-primary-reverse btn-outline-primary light-button js-load-match">
                {#todo: implement#}
                <i class="material-icons">delete</i> {{ 'Delete'|trans({}, 'Admin.Actions') }}
              </button>
            </div>
          </div>
        </div>
      </div>
      <div class="form-group row">
        <label class="form-control-label">
          {{ 'Save your data matching configuration'|trans }}
        </label>
        <div class="col-sm">
          <div class="form-row">
            <div class="col">
              {{ form_widget(dataConfigurationForm.match_name, {'attr': {'class': 'js-import-match-input', 'type': 'button'}}) }}
            </div>
            <div class="col">
              <button
                class="btn btn-primary-reverse btn-outline-primary light-button js-save-import-match"
                data-url="{{ path('admin_import_save_import_match') }}">
                {#todo: finish implementation#}
                <i class="material-icons">save</i> {{ 'Save'|trans({}, 'Admin.Actions') }}
              </button>
            </div>
          </div>
        </div>
      </div>
      <div class="form-group row">
        <label class="form-control-label">
          {{ 'Rows to skip'|trans }}
        </label>
        <div class="col-sm">
          {{ form_widget(dataConfigurationForm.rows_skip, {'attr': {'class': 'col-xs-12 col-md-4 js-rows-skip', 'min': 0}}) }}
          <small class="form-text">{{ 'Indicate how many of the first rows of your file should be skipped when importing the data. For instance set it to 1 if the first row of your file contains headers.'|trans }}</small>
        </div>
      </div>
      <div class="row">
        <table class="table table-bordered">
          <thead>
            {% for importEntityField in dataConfigurationForm.type_value %}
              <th>
                {{ form_errors(importEntityField) }}
                {{ form_widget(importEntityField) }}
              </th>
            {% endfor %}
          </thead>
          <tbody>
            {% for row in dataRowCollection.rows %}
              <tr>
                {% for cell in row %}
                  <td>{{ cell.value }}</td>
                {% endfor %}
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
      {{ form_rest(dataConfigurationForm) }}
    </div>
  </div>
</div>
{{ form_end(dataConfigurationForm) }}
