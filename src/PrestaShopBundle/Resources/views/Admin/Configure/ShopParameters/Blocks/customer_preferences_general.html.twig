{#**
 * 2007-2020 PrestaShop SA and Contributors
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * https://opensource.org/licenses/OSL-3.0
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@prestashop.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade PrestaShop to newer
 * versions in the future. If you wish to customize PrestaShop for your
 * needs please refer to https://www.prestashop.com for more information.
 *
 * @author    PrestaShop SA <contact@prestashop.com>
 * @copyright 2007-2020 PrestaShop SA and Contributors
 * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)
 * International Registered Trademark & Property of PrestaShop SA
 *#}

{% trans_default_domain "Admin.Shopparameters.Feature" %}
{% import '@PrestaShop/Admin/macros.html.twig' as ps %}

{% block customer_preferences_general %}
<div class="col-xl-10">
    <div class="card">
        <h3 class="card-header">
            <i class="material-icons">settings</i> {{ 'General'|trans({}, 'Admin.Global') }}
        </h3>
        <div class="card-block row">
            <div class="card-text">
                <div class="form-group row">
                    {{ ps.label_with_help(('Re-display cart at login'|trans), ('After a customer logs in, you can recall and display the content of his/her last shopping cart.'|trans({}, 'Admin.Shopparameters.Help'))) }}
                    <div class="col-sm">
                      {{ form_errors(generalForm.redisplay_cart_at_login) }}
                      {{ form_widget(generalForm.redisplay_cart_at_login) }}
                    </div>
                </div>
                <div class="form-group row">
                    {{ ps.label_with_help(('Send an email after registration'|trans), ('Send an email with summary of the account information (email, password) after registration.'|trans({}, 'Admin.Shopparameters.Help'))) }}
                    <div class="col-sm">
                      {{ form_errors(generalForm.send_email_after_registration) }}
                      {{ form_widget(generalForm.send_email_after_registration) }}
                    </div>
                </div>
                <div class="form-group row">
                    {{ ps.label_with_help(('Password reset delay'|trans), ('Minimum time required between two requests for a password reset.'|trans({}, 'Admin.Shopparameters.Help'))) }}
                    <div class="col-sm">
                      {{ form_errors(generalForm.password_reset_delay) }}
                      {{ form_widget(generalForm.password_reset_delay) }}
                    </div>
                </div>
                <div class="form-group row">
                    {{ ps.label_with_help(('Enable B2B mode'|trans), ('Activate or deactivate B2B mode. When this option is enabled, B2B features will be made available.'|trans({}, 'Admin.Shopparameters.Help'))) }}
                    <div class="col-sm">
                      {{ form_errors(generalForm.enable_b2b_mode) }}
                      {{ form_widget(generalForm.enable_b2b_mode) }}
                    </div>
                </div>
                <div class="form-group row">
                    {{ ps.label_with_help(('Ask for birth date'|trans), ('Display or not the birth date field.'|trans({}, 'Admin.Shopparameters.Help'))) }}
                    <div class="col-sm">
                      {{ form_errors(generalForm.ask_for_birthday) }}
                      {{ form_widget(generalForm.ask_for_birthday) }}
                    </div>
                </div>
                <div class="form-group row">
                    {{ ps.label_with_help(('Enable partner offers'|trans), ('Display or not the partner offers tick box, to receive offers from the store\'s partners.'|trans({}, 'Admin.Shopparameters.Help'))) }}
                    <div class="col-sm">
                      {{ form_errors(generalForm.enable_offers) }}
                      {{ form_widget(generalForm.enable_offers) }}
                    </div>
                </div>

                {% block customer_general_preferences_form_rest %}
                  {{ form_rest(generalForm) }}
                {% endblock %}
            </div>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-end">
                <button class="btn btn-primary">{{ 'Save'|trans({}, 'Admin.Actions') }}</button>
            </div>
        </div>
    </div>
</div>
{% endblock %}
