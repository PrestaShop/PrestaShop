services:
  _defaults:
    public: true

  # Legacy controllers don't extend the base controller, so we need to inject the container manually.
  PrestaShopBundle\Controller\Api\ApiController:
    class: PrestaShopBundle\Controller\Api\ApiController
    calls:
      - [ setLogger, [ '@logger' ] ]
      - [ setContainer, [ '@service_container' ] ]

  # Every single controller should be loaded here, except the legacy ones, and some misplaced files are also excluded.
  PrestaShopBundle\Controller\:
    resource: "%kernel.project_dir%/src/PrestaShopBundle/Controller/*"
    exclude:
      - "%kernel.project_dir%/src/PrestaShopBundle/Controller/Api"
      - "%kernel.project_dir%/src/PrestaShopBundle/Controller/ArgumentResolver"
      - "%kernel.project_dir%/src/PrestaShopBundle/Controller/Exception"
    autoconfigure: true
    autowire: true

  prestashop.core.api.controller:
    alias: PrestaShopBundle\Controller\Api\ApiController

  PrestaShopBundle\Controller\Api\StockController:
    class: PrestaShopBundle\Controller\Api\StockController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      movements: "@prestashop.core.api.stock.movements_collection"
      stockRepository: "@prestashop.core.api.stock.repository"
      queryParams: "@prestashop.core.api.query_stock_params_collection"

  PrestaShopBundle\Controller\Api\StockMovementController:
    class: PrestaShopBundle\Controller\Api\StockMovementController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      stockMovementRepository: "@prestashop.core.api.stock_movement.repository"
      queryParams: "@prestashop.core.api.query_stock_movement_params_collection"

  prestashop.core.api.stock_movement.controller:
    alias: PrestaShopBundle\Controller\Api\StockMovementController

  PrestaShopBundle\Controller\Api\SupplierController:
    class: PrestaShopBundle\Controller\Api\SupplierController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      supplierRepository: "@prestashop.core.api.supplier.repository"

  PrestaShopBundle\Controller\Api\ManufacturerController:
    class: PrestaShopBundle\Controller\Api\ManufacturerController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      manufacturerRepository: "@prestashop.core.api.manufacturer.repository"

  PrestaShopBundle\Controller\Api\CategoryController:
    class: PrestaShopBundle\Controller\Api\CategoryController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      categoryRepository: "@prestashop.core.api.category.repository"

  PrestaShopBundle\Controller\Api\AttributeController:
    class: PrestaShopBundle\Controller\Api\AttributeController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      featureAttributeRepository: "@prestashop.core.api.feature_attribute.repository"

  PrestaShopBundle\Controller\Api\FeatureController:
    class: PrestaShopBundle\Controller\Api\FeatureController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      featureAttributeRepository: "@prestashop.core.api.feature_attribute.repository"

  PrestaShopBundle\Controller\Api\I18nController:
    class: PrestaShopBundle\Controller\Api\I18nController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true

  PrestaShopBundle\Controller\Api\TranslationController:
    class: PrestaShopBundle\Controller\Api\TranslationController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true
    properties:
      translationService: "@prestashop.service.translation"
      queryParams: "@prestashop.core.api.query_translation_params_collection"

  PrestaShopBundle\Controller\Api\Improve\Design\PositionsController:
    class: PrestaShopBundle\Controller\Api\Improve\Design\PositionsController
    parent: PrestaShopBundle\Controller\Api\ApiController
    public: true

  prestashop.core.admin.multistore:
    class: PrestaShopBundle\Controller\Admin\MultistoreController
    parent: PrestaShopBundle\Controller\Admin\FrameworkBundleAdminController
    public: true
    properties:
      multiStoreFeature: "@prestashop.adapter.multistore_feature"
      multiStoreContext: "@prestashop.adapter.shop.context"
      entityManager: "@doctrine.orm.entity_manager"
      productRepository: '@PrestaShop\PrestaShop\Adapter\Product\Repository\ProductRepository'
    calls:
      - [ setContainer, [ '@service_container' ] ]
