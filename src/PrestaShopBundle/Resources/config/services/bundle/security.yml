parameters:
  prestashop.security.voter.product.class: PrestaShopBundle\Security\Voter\PageVoter

services:
  _defaults:
    public: true

  prestashop.security.admin.provider:
    class: PrestaShopBundle\Security\Admin\EmployeeProvider
    arguments:
      - "@prestashop.adapter.legacy.context"
      - "@prestashop.static_cache.adapter"
      - '@PrestaShop\PrestaShop\Core\Security\EmployeePermissionProviderInterface'

  prestashop.security.api-access.provider:
    class: PrestaShopBundle\Security\OAuth2\Provider\ApiAccessProvider
    arguments:
      - '@PrestaShopBundle\Entity\Repository\ApiAccessRepository'
      - '@Symfony\Component\PasswordHasher\PasswordHasherInterface'

  prestashop.security.role.dynamic_role_hierarchy:
    class: PrestaShopBundle\Security\Role\DynamicRoleHierarchy

  prestashop.security.voter.product:
    class: "%prestashop.security.voter.product.class%"
    autowire: true
    tags:
      - { name: security.voter }
    public: false

  PrestaShopBundle\Security\OAuth2\PrestashopAuthorisationServer:
    public: false
    arguments:
      - '@League\OAuth2\Server\ResourceServer'

  PrestaShop\PrestaShop\Core\Security\OAuth2\AuthorisationServerInterface:
    alias: PrestaShopBundle\Security\OAuth2\PrestashopAuthorisationServer
    public: false

  # SSL middleware
  PrestaShopBundle\Security\SslMiddleware:
    arguments:
      - '@prestashop.adapter.legacy.configuration'
    tags:
      - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

  prestashop.security.password_hasher.factory:
    class: Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory
    arguments:
      -
        common: { 'algorithm': 'auto' }

  Symfony\Component\PasswordHasher\PasswordHasherInterface:
    factory: [ '@prestashop.security.password_hasher.factory', 'getPasswordHasher' ]
    arguments:
      - 'common'
