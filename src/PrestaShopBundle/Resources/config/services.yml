imports:
    - { resource: admin/services.yml }
    - { resource: admin/services-form.yml }
    - { resource: adapter/services.yml }

parameters:
    prestashop.security.voter.product.class: PrestaShopBundle\Security\Voter\PageVoter

services:
    doctrine.cache.provider:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments:
            - "%kernel.cache_dir%/doctrine"

    guzzle.cache:
        class: Csa\Bundle\GuzzleBundle\GuzzleHttp\Cache\DoctrineAdapter
        arguments:
            - "@doctrine.cache.provider"
            - "%prestashop.addons.api_client.ttl%"
        shared: false

    main.warmer.cache_warmer:
        class: PrestaShopBundle\Cache\CacheWarmer
        arguments:
            - "@filesystem"
        tags:
            - { name: kernel.cache_warmer }

    prestashop.cache.refresh:
        class: PrestaShopBundle\Service\Cache\Refresh
        arguments:
            - "%kernel.environment%"
        calls:
            - [addCacheClear, []]

    prestashop.database.naming_strategy:
        class: PrestaShopBundle\Service\Database\DoctrineNamingStrategy
        arguments: ["%database_prefix%"]

    prestashop.data_provider.modules.recommended:
        class: PrestaShopBundle\Service\DataProvider\Admin\RecommendedModules
        arguments: ["@router"]

    prestashop.security.role.dynamic_role_hierarchy:
        class: PrestaShopBundle\Security\Role\DynamicRoleHierarchy

    prestashop.security.voter.product:
        class: "%prestashop.security.voter.product.class%"
        tags:
            - { name: security.voter }
        public: false

    prestashop.service.product:
        class: PrestaShopBundle\Service\ProductService
        arguments:
            - "@prestashop.adapter.data_provider.product"

    prestashop.service.translation:
        class: PrestaShopBundle\Service\TranslationService
        properties:
            container: "@service_container"

    # Interfaced services to decorate
    prestashop.core.data_provider.stock_interface:
        class: PrestaShopBundle\Service\DataProvider\StockInterface

    # DISPATCHERS
    prestashop.hook.dispatcher:
        class: PrestaShopBundle\Service\Hook\HookDispatcher
        calls:
            - [addSubscriber, ["@prestashop.adapter.legacy.hook.subscriber"]]
            - [addSubscriber, ["@prestashop.adapter.legacy.block.helper.subscriber"]]

    prestashop.hook.finder:
        class: PrestaShopBundle\Service\Hook\HookFinder

    # EVENT HANDLER
    prestashop.handler.log:
        class: PrestaShopBundle\Service\Log\LogHandler
        arguments:
            - "@service_container"

    # ADAPTERS (prestashop.adapter.*)
    # Legacy context service, transitional
    prestashop.adapter.legacy.configuration:
        class: PrestaShop\PrestaShop\Adapter\Configuration

    prestashop.adapter.legacy.context:
        class: PrestaShop\PrestaShop\Adapter\LegacyContext

    prestashop.adapter.legacy.logger:
        class: PrestaShop\PrestaShop\Adapter\LegacyLogger

    # SSL middleware
    prestashop.adapter.middleware.ssl:
        class: PrestaShop\PrestaShop\Adapter\Security\SslMiddleware
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    # CSRF/XSS additional protection middleware
    prestashop.user_provider:
        class: PrestaShopBundle\Service\DataProvider\UserProvider
        arguments: ['@security.token_storage']

    prestashop.tokenized_url_listener:
        class: PrestaShopBundle\EventListener\TokenizedUrlsListener
        arguments:
            - "@security.csrf.token_manager"
            - "@router"
            - "@=service('prestashop.user_provider').getUsername()"
            - "@prestashop.adapter.legacy.context"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    prestashop.multishop_command_listener:
        class: PrestaShopBundle\EventListener\MultishopCommandListener
        arguments:
            - "@prestashop.adapter.shop.context"
            - "@=service('kernel').getRootDir()"
        tags:
            - { name: kernel.event_listener, event: console.command, method: onConsoleCommand }

    prestashop.router:
        class: PrestaShopBundle\Service\Routing\Router
        parent: 'router.default'
        public: true
        calls:
          - ['setTokenManager', ['@security.csrf.token_manager']]
          - ['setUserProvider', ["@=service('prestashop.user_provider')"]]

    # Legacy Hooks registrator
    prestashop.adapter.legacy.hook.subscriber:
        class: PrestaShop\PrestaShop\Adapter\LegacyHookSubscriber
    prestashop.adapter.legacy.block.helper.subscriber:
            class: PrestaShop\PrestaShop\Adapter\Admin\LegacyBlockHelperSubscriber

    # Data providers service
    prestashop.adapter.data_provider.supplier:
        class: PrestaShop\PrestaShop\Adapter\Supplier\SupplierDataProvider

    prestashop.adapter.data_provider.warehouse:
        class: PrestaShop\PrestaShop\Adapter\Warehouse\WarehouseDataProvider

    prestashop.adapter.data_provider.category:
        class: PrestaShop\PrestaShop\Adapter\Category\CategoryDataProvider
        arguments: ["@=service('prestashop.adapter.legacy.context')"]

    prestashop.adapter.data_provider.country:
        class: PrestaShop\PrestaShop\Adapter\Country\CountryDataProvider

    prestashop.adapter.data_provider.currency:
        class: PrestaShop\PrestaShop\Adapter\Currency\CurrencyDataProvider

    prestashop.adapter.data_provider.group:
        class: PrestaShop\PrestaShop\Adapter\Group\GroupDataProvider

    prestashop.adapter.data_provider.tax:
        class: PrestaShop\PrestaShop\Adapter\Tax\TaxRuleDataProvider

    prestashop.adapter.data_provider.manufacturer:
        class: PrestaShop\PrestaShop\Adapter\Manufacturer\ManufacturerDataProvider

    prestashop.adapter.data_provider.product:
        class: PrestaShop\PrestaShop\Adapter\Product\ProductDataProvider

    prestashop.adapter.data_provider.attachment:
        class: PrestaShop\PrestaShop\Adapter\Product\AttachmentDataProvider

    prestashop.adapter.data_provider.feature:
        class: PrestaShop\PrestaShop\Adapter\Feature\FeatureDataProvider

    prestashop.adapter.data_provider.carrier:
        class: PrestaShop\PrestaShop\Adapter\Carrier\CarrierDataProvider

    prestashop.adapter.data_provider.attribute:
        class: PrestaShop\PrestaShop\Adapter\Attribute\AttributeDataProvider

    prestashop.adapter.data_provider.customer:
        class: PrestaShop\PrestaShop\Adapter\Customer\CustomerDataProvider

    prestashop.adapter.data_provider.combination:
        class: PrestaShop\PrestaShop\Adapter\CombinationDataProvider

    prestashop.adapter.stock_manager:
        class: PrestaShop\PrestaShop\Adapter\StockManager
        decorates: prestashop.core.data_provider.stock_interface
        public: false

    prestashop.adapter.data_provider.pack:
        class: PrestaShop\PrestaShop\Adapter\Pack\PackDataProvider

    prestashop.adapter.data_provider.module:
        class: PrestaShop\PrestaShop\Adapter\Module\ModuleDataProvider
        arguments: ["@prestashop.adapter.legacy.logger", "@translator", "@doctrine.orm.entity_manager"]
        calls:
                - [ "setEmployeeId", ["@=service('prestashop.adapter.legacy.context').getContext().employee?service('prestashop.adapter.legacy.context').getContext().employee.id:0"]]

    prestashop.categories_provider:
        class: PrestaShopBundle\Service\DataProvider\Admin\CategoriesProvider
        arguments: ['@prestashop.addons.client_api', '@logger']

    # Presenters
    prestashop.adapter.presenter.module:
        class: PrestaShop\PrestaShop\Adapter\Module\ModulePresenter
        arguments: ["@=service('prestashop.adapter.legacy.context').getContext().currency", "@prestashop.adapter.formatter.price"]

    prestashop.adapter.formatter.price:
        class: PrestaShop\PrestaShop\Adapter\Product\PriceFormatter

    # Other adapters
    prestashop.adapter.shop.context:
        class: PrestaShop\PrestaShop\Adapter\Shop\Context

    prestashop.adapter.tools:
        class: PrestaShop\PrestaShop\Adapter\Tools

    prestashop.twig.extension.stringloader:
        class: Twig_Extension_StringLoader
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.layout:
        class: PrestaShopBundle\Twig\LayoutExtension
        arguments: ["@prestashop.adapter.legacy.context", "%kernel.environment%"]
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.translation:
        class: PrestaShopBundle\Twig\TranslationsExtension
        arguments: ["@service_container", "@router"]
        properties:
            logger: "@logger"
            translator: "@translator"
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.dataFormatter:
        class: PrestaShopBundle\Twig\DataFormatterExtension
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.admin:
       class: PrestaShopBundle\Twig\AdminExtension
       arguments:
            - "@request_stack"
            - "@service_container"
       tags:
            - { name: twig.extension }

    # Updaters
    prestashop.core.module.updater:
        class: PrestaShop\PrestaShop\Adapter\Module\ModuleDataUpdater
        arguments:
            - "@prestashop.core.admin.data_provider.addons_interface"
            - "@prestashop.adapter.admin.data_provider.module"

    # Repositories
    prestashop.core.admin.module.repository:
        class: PrestaShop\PrestaShop\Core\Addon\Module\ModuleRepository
        arguments:
            - "@prestashop.adapter.admin.data_provider.module"
            - "@prestashop.adapter.data_provider.module"
            - "@prestashop.core.module.updater"
            - "@prestashop.adapter.legacy.logger"
            - "@translator"
            - "@=service('prestashop.adapter.legacy.configuration').get('_PS_MODULE_DIR_')"
            - "@doctrine.cache.provider"
        calls:
            - [setPrestaTrustChecker, ['@prestashop.adapter.module.prestatrust.checker']]

    prestashop.core.addon.theme.repository:
        class: PrestaShop\PrestaShop\Core\Addon\Theme\ThemeRepository
        arguments:
          - "@prestashop.adapter.legacy.configuration"
          - "@filesystem"
          - "@=service('prestashop.adapter.legacy.context').getContext().shop"

    prestashop.core.addon.theme.exporter:
        class: PrestaShop\PrestaShop\Core\Addon\Theme\ThemeExporter
        arguments:
          - "@prestashop.adapter.legacy.configuration"
          - "@filesystem"
          - "@prestashop.core.admin.lang.repository"
          - "@prestashop.translation.theme.exporter"

    prestashop.core.admin.tab.repository:
        class: PrestaShopBundle\Entity\Repository\TabRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - PrestaShopBundle\Entity\Tab

    prestashop.core.admin.translation.repository:
        class: PrestaShopBundle\Entity\Repository\TranslationRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - PrestaShopBundle\Entity\Translation

    prestashop.core.admin.lang.repository:
        class: PrestaShopBundle\Entity\Repository\LangRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - PrestaShopBundle\Entity\Lang

    # Api
    prestashop.core.api.query_params_collection:
        abstract: true
        class: PrestaShopBundle\Api\QueryParamsCollection

    prestashop.core.api.query_stock_params_collection:
        parent: prestashop.core.api.query_params_collection
        class: PrestaShopBundle\Api\QueryStockParamsCollection

    prestashop.core.api.query_stock_movement_params_collection:
        parent: prestashop.core.api.query_params_collection
        class: PrestaShopBundle\Api\QueryStockMovementParamsCollection

    prestashop.core.api.query_translation_params_collection:
        parent: prestashop.core.api.query_params_collection
        class: PrestaShopBundle\Api\QueryTranslationParamsCollection

    prestashop.core.api.stock.movements_collection:
        class: PrestaShopBundle\Api\Stock\MovementsCollection

    # Api - Repositories
    prestashop.core.api.stock.repository:
        class: PrestaShopBundle\Entity\Repository\StockRepository
        arguments:
            - "@service_container"
            - "@doctrine.dbal.default_connection"
            - "@doctrine.orm.default_entity_manager"
            - "@prestashop.adapter.legacy.context"
            - "@prestashop.adapter.image_manager"
            - "@prestashop.adapter.stock_manager"
            - "%database_prefix%"

    prestashop.core.api.stockMovement.repository:
        class: PrestaShopBundle\Entity\Repository\StockMovementRepository
        arguments:
            - "@service_container"
            - "@doctrine.dbal.default_connection"
            - "@doctrine.orm.default_entity_manager"
            - "@prestashop.adapter.legacy.context"
            - "@prestashop.adapter.image_manager"
            - "%database_prefix%"

    prestashop.core.api.supplier.repository:
        class: PrestaShopBundle\Entity\Repository\SupplierRepository
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@prestashop.adapter.legacy.context"
            - "%database_prefix%"

    prestashop.core.api.manufacturer.repository:
        class: PrestaShopBundle\Entity\Repository\ManufacturerRepository
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@prestashop.adapter.legacy.context"
            - "%database_prefix%"

    prestashop.core.api.category.repository:
        class: PrestaShopBundle\Entity\Repository\CategoryRepository
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@prestashop.adapter.legacy.context"
            - "%database_prefix%"

    prestashop.core.api.feature_attribute.repository:
        class: PrestaShopBundle\Entity\Repository\FeatureAttributeRepository
        arguments:
            - "@doctrine.dbal.default_connection"
            - "@prestashop.adapter.legacy.context"
            - "%database_prefix%"

    # Api - Controllers
    prestashop.core.api.controller:
        abstract: true
        class: PrestaShopBundle\Controller\Api\ApiController
        calls:
            - [setLogger, ['@logger']]
            - [setContainer, ['@service_container']]

    prestashop.core.api.stock.controller:
        class: PrestaShopBundle\Controller\Api\StockController
        parent: prestashop.core.api.controller
        properties:
            movements: "@prestashop.core.api.stock.movements_collection"
            stockRepository: "@prestashop.core.api.stock.repository"
            queryParams: "@prestashop.core.api.query_stock_params_collection"

    prestashop.core.api.stockMovement.controller:
        class: PrestaShopBundle\Controller\Api\StockMovementController
        parent: prestashop.core.api.controller
        properties:
            stockMovementRepository: "@prestashop.core.api.stockMovement.repository"
            queryParams: "@prestashop.core.api.query_stock_movement_params_collection"

    prestashop.core.api.supplier.controller:
        class: PrestaShopBundle\Controller\Api\SupplierController
        parent: prestashop.core.api.controller
        properties:
            supplierRepository: "@prestashop.core.api.supplier.repository"

    prestashop.core.api.manufacturer.controller:
        class: PrestaShopBundle\Controller\Api\ManufacturerController
        parent: prestashop.core.api.controller
        properties:
            manufacturerRepository: "@prestashop.core.api.manufacturer.repository"

    prestashop.core.api.category.controller:
        class: PrestaShopBundle\Controller\Api\CategoryController
        parent: prestashop.core.api.controller
        properties:
            categoryRepository: "@prestashop.core.api.category.repository"

    prestashop.core.api.attribute.controller:
        class: PrestaShopBundle\Controller\Api\AttributeController
        parent: prestashop.core.api.controller
        properties:
            featureAttributeRepository: "@prestashop.core.api.feature_attribute.repository"

    prestashop.core.api.feature.controller:
        class: PrestaShopBundle\Controller\Api\FeatureController
        parent: prestashop.core.api.controller
        properties:
            featureAttributeRepository: "@prestashop.core.api.feature_attribute.repository"

    prestashop.core.api.i18n.controller:
        class: PrestaShopBundle\Controller\Api\I18nController
        parent: prestashop.core.api.controller

    prestashop.core.api.translation.controller:
        class: PrestaShopBundle\Controller\Api\TranslationController
        parent: prestashop.core.api.controller
        properties:
            translationService: "@prestashop.service.translation"
            queryParams: "@prestashop.core.api.query_translation_params_collection"

    # Api - i18n
    prestashop.translation.api:
        abstract: true
        class: PrestaShopBundle\Translation\Api\AbstractApi
        calls:
            - [setTranslator, ['@translator']]

    prestashop.translation.api.stock:
        class: PrestaShopBundle\Translation\Api\StockApi
        parent: prestashop.translation.api

    prestashop.translation.api.international:
        class: PrestaShopBundle\Translation\Api\InternationalApi
        parent: prestashop.translation.api

    # Managers
    prestashop.adapter.image_manager:
        class: PrestaShop\PrestaShop\Adapter\ImageManager
        arguments: ["@prestashop.adapter.legacy.context"]

    prestashop.module.manager:
        class: PrestaShop\PrestaShop\Core\Addon\Module\ModuleManager
        arguments:
            - "@prestashop.adapter.admin.data_provider.module"
            - "@prestashop.adapter.data_provider.module"
            - "@prestashop.core.module.updater"
            - "@prestashop.core.admin.module.repository"
            - "@prestashop.module.zip.manager"
            - "@translator"
            - "@event_dispatcher"
            - "@=service('prestashop.adapter.legacy.context').getContext().employee"

    prestashop.module.zip.manager:
        class: PrestaShop\PrestaShop\Adapter\Module\ModuleZipManager
        arguments:
            - "@filesystem"
            - "@translator"
            - "@event_dispatcher"

    prestashop.twig.extension.hook:
        class: PrestaShopBundle\Twig\HookExtension
        arguments:
            - "@prestashop.hook.dispatcher"
            - "@prestashop.adapter.data_provider.module"
            - "@=service('prestashop.adapter.legacy.context').getContext().employee?service('prestashop.core.admin.module.repository'):null"
        tags:
            - { name: twig.extension }

    # Addons API Client
    prestashop.addons.client_api:
        class: PrestaShopBundle\Service\DataProvider\Marketplace\ApiClient
        arguments:
            - "@csa_guzzle.client.addons_api"
            - "@=service('translator').getLocale()"
            - "@=service('prestashop.adapter.data_provider.country').getIsoCodebyId()"
            - "@prestashop.adapter.tools"
            - "@=service('prestashop.adapter.legacy.configuration').get('_PS_BASE_URL_')"
        calls:
            - [ "setSslVerification", ["%prestashop.addons.api_client.verify_ssl%"]]

    # Data Collectors
    prestashop.hooks_registry:
        class: PrestaShopBundle\DataCollector\HookRegistry

    prestashop.hooks_collector:
        class: PrestaShopBundle\DataCollector\HookDataCollector
        arguments: ['@prestashop.hooks_registry']
        public: false
        tags:
          - {name: data_collector, template: '@PrestaShop/Admin/WebProfiler/hooks_collector.html.twig', id: 'ps.hooks_collector'}

    # Web Profiler Bundle
    data_collector.config:
        class: Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector
        arguments: ["PrestaShop", "@=service('prestashop.adapter.legacy.configuration').get('_PS_VERSION_')"]
        public: false
        calls:
          - ["setKernel", ["@kernel"]]
        tags:
          - {name: data_collector, template: "@PrestaShop/Admin/WebProfiler/config.html.twig", id: "config", priority: "-255"}
