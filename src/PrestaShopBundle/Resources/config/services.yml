imports:
    - { resource: admin/services.yml }
    - { resource: admin/services-form.yml }

services:
    finder:
        class: Symfony\Component\Finder\Finder
        shared: false

    guzzle.cache.provider:
        class: Doctrine\Common\Cache\FilesystemCache
        arguments:
            - "%kernel.cache_dir%/guzzle"

    guzzle.cache:
        class: Csa\Bundle\GuzzleBundle\GuzzleHttp\Cache\DoctrineAdapter
        arguments:
            - "@guzzle.cache.provider"
            - "%prestashop.addons.api_client.ttl%"
        shared: false

    main.warmer.cache_warmer:
        class: PrestaShopBundle\Cache\CacheWarmer
        arguments:
            - "@filesystem"
        tags:
            - { name: kernel.cache_warmer }

    prestashop.cache.refresh:
        class: PrestaShopBundle\Service\Cache\Refresh
        arguments:
            - "%kernel.environment%"
        calls:
            - [addCacheClear, []]

    prestashop.database.naming_strategy:
        class: PrestaShopBundle\Service\Database\DoctrineNamingStrategy
        arguments: ["%database_prefix%"]

    prestashop.csv:
        class: PrestaShopBundle\Service\Csv

    prestashop.data_provider.modules.recommended:
        class: PrestaShopBundle\Service\DataProvider\Admin\RecommendedModules
        arguments: ["@router"]

    prestashop.security.role.dynamic_role_hierarchy:
        class:      PrestaShopBundle\Security\Role\DynamicRoleHierarchy


    prestashop.service.product:
        class: PrestaShopBundle\Service\ProductService
        arguments:
            - "@prestashop.adapter.data_provider.product"

    # Interfaced services to decorate
    prestashop.core.data_provider.stock_interface:
        class: PrestaShopBundle\Service\DataProvider\StockInterface

    # DISPATCHERS

    prestashop.hook.dispatcher:
        class: PrestaShopBundle\Service\Hook\HookDispatcher
        calls:
            - [addSubscriber, ["@prestashop.adapter.legacy.hook.subscriber"]]
            - [addSubscriber, ["@prestashop.adapter.legacy.block.helper.subscriber"]]

    prestashop.hook.finder:
        class: PrestaShopBundle\Service\Hook\HookFinder

    # EVENT HANDLER
    prestashop.handler.log:
        class: PrestaShopBundle\Service\Log\LogHandler
        arguments:
            - "@service_container"

    # ADAPTERS (prestashop.adapter.*)

    # Legacy context service, transitional
    prestashop.adapter.legacy.configuration:
        class: PrestaShop\PrestaShop\Adapter\Configuration
        arguments: ["@=service('prestashop.adapter.legacy.context').getContext().shop"]

    prestashop.adapter.legacy.context:
        class: PrestaShop\PrestaShop\Adapter\LegacyContext

    prestashop.adapter.legacy.logger:
        class: PrestaShop\PrestaShop\Adapter\LegacyLogger

    # SSL middleware
    prestashop.adapter.middleware.ssl:
        class: PrestaShop\PrestaShop\Adapter\Security\SslMiddleware
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    # CSRF/XSS additional protection middleware
    prestashop.user_provider:
        class: PrestaShopBundle\Service\DataProvider\UserProvider
        arguments: ['@security.token_storage']

    prestashop.tokenized_url_listener:
        class: PrestaShopBundle\EventListener\TokenizedUrlsListener
        arguments:
            - "@security.csrf.token_manager"
            - "@router"
            - "@=service('prestashop.user_provider').getUsername()"
            - "@=service('prestashop.adapter.legacy.context').getContext().employee"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    prestashop.router:
        class: PrestaShopBundle\Service\Routing\Router
        parent: 'router.default'
        public: true
        calls:
          - ['setTokenManager', ['@security.csrf.token_manager']]
          - ['setUserProvider', ["@=service('prestashop.user_provider')"]]

    # Legacy Hooks registrator
    prestashop.adapter.legacy.hook.subscriber:
        class: PrestaShop\PrestaShop\Adapter\LegacyHookSubscriber
    prestashop.adapter.legacy.block.helper.subscriber:
            class: PrestaShop\PrestaShop\Adapter\Admin\LegacyBlockHelperSubscriber

    # Data providers service
    prestashop.adapter.data_provider.supplier:
        class: PrestaShop\PrestaShop\Adapter\Supplier\SupplierDataProvider

    prestashop.adapter.data_provider.warehouse:
        class: PrestaShop\PrestaShop\Adapter\Warehouse\WarehouseDataProvider

    prestashop.adapter.data_provider.category:
        class: PrestaShop\PrestaShop\Adapter\Category\CategoryDataProvider

    prestashop.adapter.data_provider.country:
        class: PrestaShop\PrestaShop\Adapter\Country\CountryDataProvider

    prestashop.adapter.data_provider.currency:
        class: PrestaShop\PrestaShop\Adapter\Currency\CurrencyDataProvider

    prestashop.adapter.data_provider.group:
        class: PrestaShop\PrestaShop\Adapter\Group\GroupDataProvider

    prestashop.adapter.data_provider.tax:
        class: PrestaShop\PrestaShop\Adapter\Tax\TaxRuleDataProvider

    prestashop.adapter.data_provider.manufacturer:
        class: PrestaShop\PrestaShop\Adapter\Manufacturer\ManufacturerDataProvider

    prestashop.adapter.data_provider.product:
        class: PrestaShop\PrestaShop\Adapter\Product\ProductDataProvider

    prestashop.adapter.data_provider.attachment:
        class: PrestaShop\PrestaShop\Adapter\Product\AttachmentDataProvider

    prestashop.adapter.data_provider.feature:
        class: PrestaShop\PrestaShop\Adapter\Feature\FeatureDataProvider

    prestashop.adapter.data_provider.carrier:
        class: PrestaShop\PrestaShop\Adapter\Carrier\CarrierDataProvider

    prestashop.adapter.data_provider.attribute:
        class: PrestaShop\PrestaShop\Adapter\Attribute\AttributeDataProvider

    prestashop.adapter.data_provider.customer:
        class: PrestaShop\PrestaShop\Adapter\Customer\CustomerDataProvider

    prestashop.adapter.data_provider.combination:
        class: PrestaShop\PrestaShop\Adapter\CombinationDataProvider

    prestashop.adapter.stock_manager:
        class: PrestaShop\PrestaShop\Adapter\StockManager
        decorates: prestashop.core.data_provider.stock_interface
        public: false

    prestashop.adapter.data_provider.pack:
        class: PrestaShop\PrestaShop\Adapter\Pack\PackDataProvider

    prestashop.adapter.data_provider.module:
        class: PrestaShop\PrestaShop\Adapter\Module\ModuleDataProvider
        arguments: ["@prestashop.adapter.legacy.logger", "@translator", "@doctrine.orm.entity_manager"]

    prestashop.categories_provider:
        class: PrestaShopBundle\Service\DataProvider\Admin\CategoriesProvider
        arguments: ['@prestashop.addons.client_api']

    # Presenters
    prestashop.adapter.presenter.module:
        class: PrestaShop\PrestaShop\Adapter\Module\ModulePresenter
        arguments: ["@=service('prestashop.adapter.legacy.context').getContext().currency", "@prestashop.adapter.formatter.price"]

    prestashop.adapter.formatter.price:
        class: PrestaShop\PrestaShop\Adapter\Product\PriceFormatter

    # Other adapters
    prestashop.adapter.shop.context:
        class: PrestaShop\PrestaShop\Adapter\Shop\Context

    prestashop.adapter.tools:
        class: PrestaShop\PrestaShop\Adapter\Tools

    prestashop.twig.extension.hook:
        class: PrestaShopBundle\Twig\HookExtension
        arguments: ["@prestashop.hook.dispatcher", "@prestashop.adapter.data_provider.module"]
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.stringloader:
        class: Twig_Extension_StringLoader
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.layout:
        class: PrestaShopBundle\Twig\LayoutExtension
        arguments: ["@prestashop.adapter.legacy.context", "%kernel.environment%"]
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.translation:
        class: PrestaShopBundle\Twig\TranslationsExtension
        arguments: ["@service_container", "@router"]
        properties:
            logger: "@logger"
            translator: "@translator"
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.dataFormatter:
        class: PrestaShopBundle\Twig\DataFormatterExtension
        tags:
            - { name: twig.extension }

    prestashop.twig.extension.admin:
       class: PrestaShopBundle\Twig\AdminExtension
       arguments:
            - "@request_stack"
       tags:
            - { name: twig.extension }

    # Updaters
    prestashop.core.module.updater:
        class: PrestaShop\PrestaShop\Adapter\Module\ModuleDataUpdater
        arguments:
            - "@prestashop.core.admin.data_provider.addons_interface"
            - "@prestashop.adapter.admin.data_provider.module"

    # Repositories
    prestashop.core.admin.module.repository:
        class: PrestaShop\PrestaShop\Core\Addon\Module\ModuleRepository
        arguments:
            - "@prestashop.adapter.admin.data_provider.module"
            - "@prestashop.adapter.data_provider.module"
            - "@prestashop.core.module.updater"
            - "@prestashop.adapter.legacy.logger"
            - "@translator"

    prestashop.core.addon.theme.repository:
        class: PrestaShop\PrestaShop\Core\Addon\Theme\ThemeRepository
        arguments:
          - "@prestashop.adapter.legacy.configuration"
          - "@filesystem"
          - "@=service('prestashop.adapter.legacy.context').getContext().shop"

    prestashop.core.addon.theme.exporter:
        class: PrestaShop\PrestaShop\Core\Addon\Theme\ThemeExporter
        arguments:
          - "@prestashop.adapter.legacy.configuration"
          - "@filesystem"
          - "@finder"
          - "@prestashop.core.admin.lang.repository"
          - "@prestashop.translation.theme.exporter"

    prestashop.core.admin.translation.repository:
        class: PrestaShopBundle\Entity\Repository\TranslationRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - PrestaShopBundle\Entity\Translation

    prestashop.core.admin.lang.repository:
        class: PrestaShopBundle\Entity\Repository\LangRepository
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments:
            - PrestaShopBundle\Entity\Lang

    # Managers
    prestashop.adapter.image_manager:
        class: PrestaShop\PrestaShop\Adapter\ImageManager
        arguments: ["@prestashop.adapter.legacy.context"]

    prestashop.module.manager:
        class: PrestaShop\PrestaShop\Core\Addon\Module\ModuleManager
        arguments:
            - "@prestashop.adapter.admin.data_provider.module"
            - "@prestashop.adapter.data_provider.module"
            - "@prestashop.core.module.updater"
            - "@prestashop.core.admin.module.repository"
            - "@prestashop.module.zip.manager"
            - "@translator"
            - "@=service('prestashop.adapter.legacy.context').getContext().employee"

    prestashop.module.zip.manager:
        class: PrestaShop\PrestaShop\Adapter\Module\ModuleZipManager
        arguments:
            - "@filesystem"
            - "@finder"
            - "@translator"

# Addons API Client
    prestashop.addons.client_api:
        class: PrestaShopBundle\Service\DataProvider\Marketplace\ApiClient
        arguments:
            - "@csa_guzzle.client.addons_api"
            - "@=service('prestashop.adapter.legacy.context').getContext().language.iso_code"
            - "@=service('prestashop.adapter.data_provider.country').getIsoCodebyId()"
            - "@prestashop.adapter.tools"
        calls:
            - [ "setSslVerification", ["%prestashop.addons.api_client.verify_ssl%"]]

