{
  "name": "ui-tests",
  "version": "1.0.0",
  "description": "User interface tests",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "// ESLint": "To run ESLint commands",
    "lint:fix": "eslint --fix --ignore-path .gitignore .",
    "lint": "eslint --ignore-path .gitignore .",
    "// TypeScript Check": "Script to check typescript",
    "check:typescript": "tsc --build ./tsconfig.json",
    "// Step identifiers": "Script to check step identifiers",
    "check:step-identifiers": "ts-node tools/stepIdentifiersChecker.ts",
    "// Linkchecker": "Script to run link checker",
    "check:links": "ts-mocha tools/linkchecker.ts",
    "check:links:fast-fail": "ts-mocha --bail tools/linkchecker.ts",
    "// Specific test": "Script to run a specific test/folder",
    "test:specific": "ts-mocha --file utils/setup.ts campaigns/$TEST_PATH",
    "test:specific:fast-fail": "ts-mocha --bail --file utils/setup.ts campaigns/$TEST_PATH",
    "// CLDR": "Scripts to run CLDR tests",
    "test:cldr": "TEST_PATH='cldr/**/*' npm run test:specific",
    "test:cldr:fast-fail": "TEST_PATH='cldr/' npm run test:specific:fast-fail",
    "// Sanity": "Scripts to run sanity tests",
    "test:sanity": "TEST_PATH='sanity/**/*' npm run test:specific",
    "test:sanity:fast-fail": "TEST_PATH='sanity/*' npm run test:specific:fast-fail",
    "// Functional": "Scripts to run functional tests",
    "test:functional": "TEST_PATH='functional/**/*' npm run test:specific",
    "// Functional API": "Scripts to run functional API tests",
    "test:functional:API": "TEST_PATH='functional/API/**/*' npm run test:specific",
    "// Functional BO": "Scripts to run functional BO tests",
    "test:functional:BO": "TEST_PATH='functional/BO/**/*' npm run test:specific",
    "test:functional:BO:login": "TEST_PATH='functional/BO/00_login/**/*' npm run test:specific",
    "test:functional:BO:dashboard": "TEST_PATH='functional/BO/01_dashboard/**/*' npm run test:specific",
    "test:functional:BO:orders": "TEST_PATH='functional/BO/02_orders/**/*' npm run test:specific",
    "test:functional:BO:orders:01": "TEST_PATH='functional/BO/02_orders/01*/**/*' npm run test:specific",
    "test:functional:BO:orders:01:0-1": "TEST_PATH='functional/BO/02_orders/01*/{0*,1*}.ts' npm run test:specific",
    "test:functional:BO:orders:01-create-orders": "TEST_PATH='functional/BO/02_orders/01*/createOrders/**/*' npm run test:specific",
    "test:functional:BO:orders:01-view-and-edit-order": "TEST_PATH='functional/BO/02_orders/01*/viewAndEditOrder/**/*' npm run test:specific",
    "test:functional:BO:orders:02": "TEST_PATH='functional/BO/02_orders/02*/*' npm run test:specific",
    "test:functional:BO:orders:03-05": "TEST_PATH='functional/BO/02_orders/0[3-5]*/*' npm run test:specific",
    "test:functional:BO:catalog": "TEST_PATH='functional/BO/03_catalog/**/*' npm run test:specific",
    "test:functional:BO:catalog:01-02": "TEST_PATH='functional/BO/03_catalog/0[1-2]*/**/*' npm run test:specific",
    "test:functional:BO:catalog:03-04": "TEST_PATH='functional/BO/03_catalog/0[3-4]*/*' npm run test:specific",
    "test:functional:BO:catalog:05-06": "TEST_PATH='functional/BO/03_catalog/0[5-6]*/**/*' npm run test:specific",
    "test:functional:BO:catalog:07-08": "TEST_PATH='functional/BO/03_catalog/0[7-8]*/*' npm run test:specific",
    "test:functional:BO:customer": "TEST_PATH='functional/BO/04_customers/**/*' npm run test:specific",
    "test:functional:BO:customer:01": "TEST_PATH='functional/BO/04_customers/01*/**/*' npm run test:specific",
    "test:functional:BO:customer:02-03": "TEST_PATH='functional/BO/04_customers/0[2-3]*/**/*' npm run test:specific",
    "test:functional:BO:customer-service": "TEST_PATH='functional/BO/05_customerService/**/*' npm run test:specific",
    "test:functional:BO:modules": "TEST_PATH='functional/BO/07_modules/**/*' npm run test:specific",
    "test:functional:BO:design": "TEST_PATH='functional/BO/08_design/**/*' npm run test:specific",
    "test:functional:BO:shipping": "TEST_PATH='functional/BO/09_shipping/**/*' npm run test:specific",
    "test:functional:BO:payment": "TEST_PATH='functional/BO/10_payment/**/*' npm run test:specific",
    "test:functional:BO:international": "TEST_PATH='functional/BO/11_international/**/*' npm run test:specific",
    "test:functional:BO:international:01": "TEST_PATH='functional/BO/11_international/01*/**/*' npm run test:specific",
    "test:functional:BO:international:02": "TEST_PATH='functional/BO/11_international/02*/**/*' npm run test:specific",
    "test:functional:BO:international:03-04": "TEST_PATH='functional/BO/11_international/0[3-4]*/**/*' npm run test:specific",
    "test:functional:BO:shop-parameters": "TEST_PATH='functional/BO/13_shopParameters/**/*' npm run test:specific",
    "test:functional:BO:shop-parameters:01-02": "TEST_PATH='functional/BO/13_shopParameters/0[1-2]*/**/*' npm run test:specific",
    "test:functional:BO:shop-parameters:03-04": "TEST_PATH='functional/BO/13_shopParameters/0[3-4]*/**/*' npm run test:specific",
    "test:functional:BO:shop-parameters:05-07": "TEST_PATH='functional/BO/13_shopParameters/0[5-7]*/*' npm run test:specific",
    "test:functional:BO:advanced-parameters": "TEST_PATH='functional/BO/14_advancedParameters/**/*' npm run test:specific",
    "test:functional:BO:advanced-parameters:01-06": "TEST_PATH='functional/BO/14_advancedParameters/0[1-6]*/*' npm run test:specific",
    "test:functional:BO:advanced-parameters:07-10": "TEST_PATH='functional/BO/14_advancedParameters/{0[7-9],10}*/**/*' npm run test:specific",
    "test:functional:BO:advanced-parameters:11-12": "TEST_PATH='functional/BO/14_advancedParameters/{11,12}*/**/*' npm run test:specific",
    "test:functional:BO:header": "TEST_PATH='functional/BO/15_header/**/*' npm run test:specific",
    "test:functional:productV2": "TEST_PATH='productV2/functional/**/*' npm run test:specific",
    "// Functional FO": "Scripts to run functional FO tests",
    "test:functional:FO": "TEST_PATH='functional/FO/**/*' npm run test:specific",
    "// Functional FO - Classic": "Scripts to run functional FO Classic tests",
    "test:functional:FO:classic": "TEST_PATH='functional/FO/classic/**/*' npm run test:specific",
    "test:functional:FO:classic:01-03": "TEST_PATH='functional/FO/classic/0[1-3]*/**/*' npm run test:specific",
    "test:functional:FO:classic:04-07": "TEST_PATH='functional/FO/classic/0[4-7]*/**/*' npm run test:specific",
    "test:functional:FO:classic:08-12": "TEST_PATH='functional/FO/classic/{0[8-9],[11-12]}*/**/*' npm run test:specific",
    "// Functional FO - Hummingbird": "Scripts to run functional FO Hummingbird tests",
    "test:functional:FO:hummingbird": "TEST_PATH='functional/FO/hummingbird/**/*' npm run test:specific",
    "test:functional:FO:hummingbird:01-03": "TEST_PATH='functional/FO/hummingbird/0[1-3]*/**/*' npm run test:specific",
    "// Functional WS": "Scripts to run functional WS tests",
    "test:functional:WS": "TEST_PATH='functional/WS/**/*' npm run test:specific",
    "// Modules tests": "Scripts to run modules tests",
    "test:modules": "TEST_PATH='modules/**/*' npm run test:specific",
    "// Regression tests": "Scripts to run regression tests",
    "test:regression": "TEST_PATH='regression/**/*' npm run test:specific",
    "// All tests": "Scripts to run all campaigns",
    "test:all": "ts-mocha --file utils/setup.ts campaigns/cldr/* campaigns/functional/* campaigns/sanity/* campaigns/regression/*"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/PrestaShop/PrestaShop.git"
  },
  "keywords": [
    "playwright",
    "sanity",
    "functional"
  ],
  "author": "PrestaShop",
  "license": "OSL-3.0",
  "bugs": {
    "url": "https://github.com/PrestaShop/PrestaShop/issues"
  },
  "homepage": "https://github.com/PrestaShop/PrestaShop/tree/develop/tests/UI#readme",
  "dependencies": {
    "@faker-js/faker": "^8.0.2",
    "@s3pweb/keycloak-admin-client-cjs": "^21.0.1",
    "@xmldom/xmldom": "^0.8.10",
    "chai": "^4.3.8",
    "chai-string": "^1.5.0",
    "csv-writer": "^1.6.0",
    "dotenv": "^16.3.1",
    "fast-xml-parser": "^4.2.7",
    "jpeg-js": "^0.4.4",
    "js-image-generator": "^1.0.4",
    "libsodium-wrappers": "^0.7.13",
    "maildev": "^2.1.0",
    "mocha": "^10.2.0",
    "mochawesome": "^7.1.3",
    "pdfjs-dist": "^3.4.120",
    "playwright": "^1.38.0",
    "xpath-ts": "^1.3.13"
  },
  "devDependencies": {
    "@types/chai": "^4.3.6",
    "@types/chai-string": "^1.4.3",
    "@types/libsodium-wrappers": "^0.7.11",
    "@types/mocha": "^10.0.1",
    "@types/mochawesome": "^6.2.1",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^8.49.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-deprecation": "^2.0.0",
    "eslint-plugin-html": "^7.1.0",
    "eslint-plugin-import": "^2.28.1",
    "jsdoc-to-markdown": "^8.0.0",
    "mochawesome-merge": "^4.3.0",
    "ts-mocha": "^10.0.0",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.2.2"
  }
}
