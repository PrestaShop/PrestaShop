{% use "bootstrap_3_layout.html.twig" %}

{% block form_start -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-horizontal')|trim}) %}
    {{- parent() -}}
{%- endblock form_start %}

{# Labels #}

{% block form_label -%}
    {% spaceless %}
        {% if label is sameas(false) %}
            <div class="{{ block('form_label_class') }}"></div>
        {% else %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ block('form_label_class'))|trim}) %}
            {{- parent() -}}
        {% endif %}
    {% endspaceless %}
{%- endblock form_label %}

{% block form_label_class -%}
    col-sm-2
{%- endblock form_label_class %}

{# Rows #}

{% block form_row -%}
    {% spaceless %}
        <div class="form-group{% if (not compound or force_error|default(false)) and not valid %} has-error{% endif %}">
            {{ form_label(form) }}
            <div class="{{ block('form_group_class') }}">
                {{ form_widget(form) }}
                {{ form_errors(form) }}
            </div>
        </div>
    {% endspaceless %}
{%- endblock form_row %}

{% block drop_files_row -%}
    {% spaceless %}
        <div class="form-group{% if (not compound or force_error|default(false)) and not valid %} has-error{% endif %}">
            {{ form_label(form.files) }}
            <div class="{{ block('form_group_class') }}">
                <script>
                    $(document).ready(function () {
                        Dropzone.autoDiscover = false;
                        var dropZoneElem = $("#{{ id }}");

                        var dropzoneOptions = {
                            url: '{{ dropzonePostUrl }}',
                            paramName: "form[file]",
                            addRemoveLinks: true,
                            success: function (file, response) {
                                var input = $('<input type="hidden" name="{{ form.vars.full_name }}[files]['+dropZoneElem.find('.dz-preview').length+']" />').val(response);
                                $(file.previewElement).append(input);
                            },
                            error: function (file, response) {
                                response = JSON.parse(response);

                                var node, _i, _len, _ref, _results;
                                var message = response.message;
                                file.previewElement.classList.add("dz-error");
                                _ref = file.previewElement.querySelectorAll("[data-dz-errormessage]");
                                _results = [];
                                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                                    node = _ref[_i];
                                    _results.push(node.textContent = message);
                                }
                                return _results;
                            },
                            init: function () {
                                {% if dropzoneExsitedFiles %}
                                    {% for file in dropzoneExsitedFiles %}
                                    var mockFile = { name: "{{file.file_original_name }}", size: {{file.filesize }}, type: '{{ file.file_type }}'};
                                    this.options.addedfile.call(this, mockFile);
                                    this.options.thumbnail.call(this, mockFile, "{{file.file_url_tmp }}");

                                    var input = $('<input type="hidden" name="{{ form.vars.full_name }}[files][{{ loop.index }}]" />').val('{{ file|json_encode()|raw}}');
                                    $(mockFile.previewElement).append(input);

                                    this.emit("complete", mockFile);
                                    {% endfor %}
                                {%  endif  %}
                            }
                        };

                        dropZoneElem.dropzone(jQuery.extend( dropzoneOptions, {{ dropzoneOptions|raw }}));
                    });
                </script>

                <div id="{{ id }}" class="col-lg-12 panel text-center dropzone">
                </div>

                {{ form_errors(form) }}
            </div>
        </div>
    {% endspaceless %}
{%- endblock drop_files_row %}

{% block checkbox_row -%}
    {{- block('checkbox_radio_row') -}}
{%- endblock checkbox_row %}

{% block radio_row -%}
    {{- block('checkbox_radio_row') -}}
{%- endblock radio_row %}

{% block checkbox_radio_row -%}
    {% spaceless %}
        <div class="form-group{% if not valid %} has-error{% endif %}">
            <div class="{{ block('form_label_class') }}"></div>
            <div class="{{ block('form_group_class') }}">
                {{ form_widget(form) }}
                {{ form_errors(form) }}
            </div>
        </div>
    {% endspaceless %}
{%- endblock checkbox_radio_row %}

{% block submit_row -%}
    {% spaceless %}
        <div class="form-group">
            <div class="{{ block('form_label_class') }}"></div>
            <div class="{{ block('form_group_class') }}">
                {{ form_widget(form) }}
            </div>
        </div>
    {% endspaceless %}
{% endblock submit_row %}

{% block form_group_class -%}
    col-sm-10
{%- endblock form_group_class %}
