{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/components/grid/extension/bulk-action-checkbox-extension.js","webpack:///./js/components/grid/extension/submit-bulk-action-extension.js","webpack:///./js/components/grid/extension/link-row-action-extension.js","webpack:///./js/components/grid/extension/action/row/submit-row-action-extension.js","webpack:///./js/pages/backup/index.js","webpack:///./js/components/grid/grid.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","window","BulkActionCheckboxExtension","grid","this","_handleBulkActionCheckboxSelect","_handleBulkActionSelectAllCheckbox","_this","getContainer","on","e","isChecked","currentTarget","is","_enableBulkActionsBtn","_disableBulkActionsBtn","find","prop","_this2","length","SubmitBulkActionExtension","_classCallCheck","extend","event","submit","$submitBtn","confirmMessage","data","confirm","$form","getId","attr","LinkRowActionExtension","preventDefault","SubmitRowActionExtension","$button","method","isGetOrPostMethod","includes","action","appendTo","append","type","__webpack_exports__","_components_grid_grid__WEBPACK_IMPORTED_MODULE_0__","_components_grid_extension_bulk_action_checkbox_extension__WEBPACK_IMPORTED_MODULE_1__","_components_grid_extension_submit_bulk_action_extension__WEBPACK_IMPORTED_MODULE_2__","_components_grid_extension_link_row_action_extension__WEBPACK_IMPORTED_MODULE_3__","_components_grid_extension_action_row_submit_row_action_extension__WEBPACK_IMPORTED_MODULE_4__","backupGrid","Grid","addExtension","SubmitBulkExtension","id","$container","closest","extension"],"mappings":";QACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA,IAAMC,EAAIC,OAAOD,EAKIE,sLAMZC,GACLC,KAAKC,gCAAgCF,GACrCC,KAAKE,mCAAmCH,8DAUPA,GAAM,IAAAI,EAAAH,KACvCD,EAAKK,eAAeC,GAAG,SAAU,6BAA8B,SAACC,GAC9D,IAEMC,EAFYX,EAAEU,EAAEE,eAEMC,GAAG,YAC3BF,EACFJ,EAAKO,sBAAsBX,GAE3BI,EAAKQ,uBAAuBZ,GAG9BA,EAAKK,eAAeQ,KAAK,4BAA4BC,KAAK,UAAWN,6DAWzCR,GAAM,IAAAe,EAAAd,KACpCD,EAAKK,eAAeC,GAAG,SAAU,2BAA4B,WAGpC,EAFEN,EAAKK,eAAeQ,KAAK,oCAAoCG,OAGpFD,EAAKJ,sBAAsBX,GAE3Be,EAAKH,uBAAuBZ,mDAYZA,GACpBA,EAAKK,eAAeQ,KAAK,wBAAwBC,KAAK,YAAY,kDAU7Cd,GACrBA,EAAKK,eAAeQ,KAAK,wBAAwBC,KAAK,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;AC5EtE,IAAMjB,EAAIC,OAAOD,EAKIoB,aACnB,SAAAA,IAAc,IAAAb,EAAAH,KACZ,mGADYiB,CAAAjB,KAAAgB,GACL,CACLE,OAAQ,SAACnB,GAAD,OAAUI,EAAKe,OAAOnB,2DAS3BA,GAAM,IAAAe,EAAAd,KACXD,EAAKK,eAAeC,GAAG,QAAS,6BAA8B,SAACc,GAC7DL,EAAKM,OAAOD,EAAOpB,oCAYhBoB,EAAOpB,GACZ,IAAMsB,EAAazB,EAAEuB,EAAMX,eACrBc,EAAiBD,EAAWE,KAAK,mBAEvC,UAA8B,IAAnBD,GAAkC,EAAIA,EAAeP,SAAWS,QAAQF,GAAnF,CAIA,IAAMG,EAAQ7B,EAAE,IAAMG,EAAK2B,QAAU,gBAErCD,EAAME,KAAK,SAAUN,EAAWE,KAAK,aACrCE,EAAME,KAAK,SAAUN,EAAWE,KAAK,gBACrCE,EAAML;;;;;;;;;;;;;;;;;;;;;;;;;AC3CV,IAAMxB,EAAIC,OAAOD,EAKIgC,sLAMZ7B,GACLA,EAAKK,eAAeC,GAAG,QAAS,sBAAuB,SAACc,GACtD,IAAMG,EAAiB1B,EAAEuB,EAAMX,eAAee,KAAK,mBAE/CD,EAAeP,SAAWS,QAAQF,IACpCH,EAAMU;;;;;;;;;;;;;;;;;;;;;;;;;AChBd,IAAMjC,EAAIC,OAAOD,EAKIkC,sLAMZ/B,GACLA,EAAKK,eAAeC,GAAG,QAAS,wBAAyB,SAACc,GACxDA,EAAMU,iBAEN,IAAME,EAAUnC,EAAEuB,EAAMX,eAClBc,EAAiBS,EAAQR,KAAK,mBAEpC,IAAID,EAAeP,QAAWS,QAAQF,GAAtC,CAIA,IAAMU,EAASD,EAAQR,KAAK,UACtBU,EAAoB,CAAC,MAAO,QAAQC,SAASF,GAE7CP,EAAQ7B,EAAE,SAAU,CACxBuC,OAAUJ,EAAQR,KAAK,OACvBS,OAAUC,EAAoBD,EAAS,SACtCI,SAAS,QAEPH,GACHR,EAAMY,OAAOzC,EAAE,UAAW,CACxB0C,KAAQ,UACRnE,KAAQ,UACRU,MAASmD,KAIbP,EAAML,mFC/DZ5D,EAAAkB,EAAA6D,GAAA,IAAAC,EAAAhF,EAAA,GAAAiF,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,IAAAoF,EAAApF,EAAA,KAiCAoC,EAFUC,OAAOD,GAEf,WACA,IAAMiD,EAAa,IAAIC,IAAK,UAE5BD,EAAWE,aAAa,IAAIjD,KAC5B+C,EAAWE,aAAa,IAAIC,KAC5BH,EAAWE,aAAa,IAAInB,KAC5BiB,EAAWE,aAAa,IAAIjB;;;;;;;;;;;;;;;;;;;;;;;;;ACd9B,IAAMlC,EAAIC,OAAOD,EAKIkD,aAMnB,SAAAA,EAAYG,gGAAIhC,CAAAjB,KAAA8C,GACd9C,KAAKiD,GAAKA,EACVjD,KAAKkD,WAAatD,EAAE,IAAMI,KAAKiD,GAAK,gEASpC,OAAOjD,KAAKiD,0CASZ,OAAOjD,KAAKkD,wDASZ,OAAOlD,KAAKkD,WAAWC,QAAQ,kBAAkBvC,KAAK,wDAQ3CwC,GACXA,EAAUlC,OAAOlB","file":"backup.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 243);\n","/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2018 PrestaShop SA\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nconst $ = window.$;\n\n/**\n * Class BulkActionSelectCheckboxExtension\n */\nexport default class BulkActionCheckboxExtension {\n  /**\n   * Extend grid with bulk action checkboxes handling functionality\n   *\n   * @param {Grid} grid\n   */\n  extend(grid) {\n    this._handleBulkActionCheckboxSelect(grid);\n    this._handleBulkActionSelectAllCheckbox(grid);\n  }\n\n  /**\n   * Handles \"Select all\" button in the grid\n   *\n   * @param {Grid} grid\n   *\n   * @private\n   */\n  _handleBulkActionSelectAllCheckbox(grid) {\n    grid.getContainer().on('change', '.js-bulk-action-select-all', (e) => {\n      const $checkbox = $(e.currentTarget);\n\n      const isChecked = $checkbox.is(':checked');\n      if (isChecked) {\n        this._enableBulkActionsBtn(grid);\n      } else {\n        this._disableBulkActionsBtn(grid);\n      }\n\n      grid.getContainer().find('.js-bulk-action-checkbox').prop('checked', isChecked);\n    });\n  }\n\n  /**\n   * Handles each bulk action checkbox select in the grid\n   *\n   * @param {Grid} grid\n   *\n   * @private\n   */\n  _handleBulkActionCheckboxSelect(grid) {\n    grid.getContainer().on('change', '.js-bulk-action-checkbox', () => {\n      const checkedRowsCount = grid.getContainer().find('.js-bulk-action-checkbox:checked').length;\n\n      if (checkedRowsCount > 0) {\n        this._enableBulkActionsBtn(grid);\n      } else {\n        this._disableBulkActionsBtn(grid);\n      }\n    });\n  }\n\n  /**\n   * Enable bulk actions button\n   *\n   * @param {Grid} grid\n   *\n   * @private\n   */\n  _enableBulkActionsBtn(grid) {\n    grid.getContainer().find('.js-bulk-actions-btn').prop('disabled', false);\n  }\n\n  /**\n   * Disable bulk actions button\n   *\n   * @param {Grid} grid\n   *\n   * @private\n   */\n  _disableBulkActionsBtn(grid) {\n    grid.getContainer().find('.js-bulk-actions-btn').prop('disabled', true);\n  }\n}\n","/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2018 PrestaShop SA\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nconst $ = window.$;\n\n/**\n * Handles submit of grid actions\n */\nexport default class SubmitBulkActionExtension {\n  constructor() {\n    return {\n      extend: (grid) => this.extend(grid),\n    };\n  }\n\n  /**\n   * Extend grid with bulk action submitting\n   *\n   * @param {Grid} grid\n   */\n  extend(grid) {\n    grid.getContainer().on('click', '.js-bulk-action-submit-btn', (event) => {\n      this.submit(event, grid);\n    });\n  }\n\n  /**\n   * Handle bulk action submitting\n   *\n   * @param {Event} event\n   * @param {Grid} grid\n   *\n   * @private\n   */\n  submit(event, grid) {\n    const $submitBtn = $(event.currentTarget);\n    const confirmMessage = $submitBtn.data('confirm-message');\n\n    if (typeof confirmMessage !== \"undefined\" && 0 < confirmMessage.length && !confirm(confirmMessage)) {\n      return;\n    }\n\n    const $form = $('#' + grid.getId() + '_filter_form');\n\n    $form.attr('action', $submitBtn.data('form-url'));\n    $form.attr('method', $submitBtn.data('form-method'));\n    $form.submit();\n  }\n}\n","/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2018 PrestaShop SA\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nconst $ = window.$;\n\n/**\n * Class LinkRowActionExtension handles link row actions\n */\nexport default class LinkRowActionExtension {\n  /**\n   * Extend grid\n   *\n   * @param {Grid} grid\n   */\n  extend(grid) {\n    grid.getContainer().on('click', '.js-link-row-action', (event) => {\n      const confirmMessage = $(event.currentTarget).data('confirm-message');\n\n      if (confirmMessage.length && !confirm(confirmMessage)) {\n        event.preventDefault();\n      }\n    });\n  }\n}\n","/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2018 PrestaShop SA\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nconst $ = window.$;\n\n/**\n * Class SubmitRowActionExtension handles submitting of row action\n */\nexport default class SubmitRowActionExtension {\n  /**\n   * Extend grid\n   *\n   * @param {Grid} grid\n   */\n  extend(grid) {\n    grid.getContainer().on('click', '.js-submit-row-action', (event) => {\n      event.preventDefault();\n\n      const $button = $(event.currentTarget);\n      const confirmMessage = $button.data('confirm-message');\n\n      if (confirmMessage.length && !confirm(confirmMessage)) {\n        return;\n      }\n\n      const method = $button.data('method');\n      const isGetOrPostMethod = ['GET', 'POST'].includes(method);\n\n      const $form = $('<form>', {\n        'action': $button.data('url'),\n        'method': isGetOrPostMethod ? method : 'POST',\n      }).appendTo('body');\n\n      if (!isGetOrPostMethod) {\n        $form.append($('<input>', {\n          'type': '_hidden',\n          'name': '_method',\n          'value': method\n        }));\n      }\n\n      $form.submit();\n    });\n  }\n}\n","/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2018 PrestaShop SA\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nimport Grid from '../../components/grid/grid';\nimport BulkActionCheckboxExtension from '../../components/grid/extension/bulk-action-checkbox-extension';\nimport SubmitBulkExtension from '../../components/grid/extension/submit-bulk-action-extension';\nimport LinkRowActionExtension from '../../components/grid/extension/link-row-action-extension';\nimport SubmitRowActionExtension from '../../components/grid/extension/action/row/submit-row-action-extension';\n\nconst $ = window.$;\n\n$(() => {\n  const backupGrid = new Grid('backup');\n\n  backupGrid.addExtension(new BulkActionCheckboxExtension());\n  backupGrid.addExtension(new SubmitBulkExtension());\n  backupGrid.addExtension(new LinkRowActionExtension());\n  backupGrid.addExtension(new SubmitRowActionExtension());\n});\n","/**\n * 2007-2018 PrestaShop\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * https://opensource.org/licenses/OSL-3.0\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@prestashop.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade PrestaShop to newer\n * versions in the future. If you wish to customize PrestaShop for your\n * needs please refer to http://www.prestashop.com for more information.\n *\n * @author    PrestaShop SA <contact@prestashop.com>\n * @copyright 2007-2018 PrestaShop SA\n * @license   https://opensource.org/licenses/OSL-3.0 Open Software License (OSL 3.0)\n * International Registered Trademark & Property of PrestaShop SA\n */\n\nconst $ = window.$;\n\n/**\n * Class is responsible for handling Grid events\n */\nexport default class Grid {\n  /**\n   * Grid id\n   *\n   * @param {string} id\n   */\n  constructor(id) {\n    this.id = id;\n    this.$container = $('#' + this.id + '_grid');\n  }\n\n  /**\n   * Get grid id\n   *\n   * @returns {string}\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get grid container\n   *\n   * @returns {jQuery}\n   */\n  getContainer() {\n    return this.$container;\n  }\n\n  /**\n   * Get grid header container\n   *\n   * @returns {jQuery}\n   */\n  getHeaderContainer() {\n    return this.$container.closest('.js-grid-panel').find('.js-grid-header');\n  }\n\n  /**\n   * Extend grid with external extensions\n   *\n   * @param {object} extension\n   */\n  addExtension(extension) {\n    extension.extend(this);\n  }\n}\n"],"sourceRoot":""}