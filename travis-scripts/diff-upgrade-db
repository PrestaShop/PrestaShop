#!/bin/bash

if [[ $EXTRA_TESTS != *"sqldiff"* ]]; then
  echo "Sql upgrade check is not requested in this build. Exiting."
  exit 0
fi

# Check only some changes are brought to a SQL file

# Temp change required for mysqldiff: disabling some rules to let the tool working properly
sudo cp /etc/mysql/my.cnf /etc/mysql/my.cnf.old
echo -e '[mysqld]\nsql_mode="IGNORE_SPACE,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"' | sudo tee -a /etc/mysql/my.cnf
sudo service mysql restart

# We cannot use the default mysql server (Connection refused)
docker run -tid --name upgrade-mysql -e MYSQL_ROOT_PASSWORD=doge -e MYSQL_DATABASE=upgrade mysql:5.6

# Launch the requested release of PrestaShop
docker run -tid --name upgrade-test --link upgrade-mysql -p 8085:80 \
        -e PS_FOLDER_ADMIN=admin-dev -e PS_FOLDER_INSTALL=install-dev -e PS_DOMAIN="localhost:8085" \
        -e PS_INSTALL_AUTO=1 -e DB_SERVER=upgrade-mysql -e DB_PASSWD=doge \
        -e DB_USER=root -e DB_NAME=upgrade prestashop/prestashop:$PRESTASHOP_REFERENCE_VERSION

if [ $? -ne 0 ]; then
    echo "Could not start container. Exiting..."
    exit 1
fi

# Copy Travis folder into temp, then clean it and send to docker
# (This avoids to send the parameters file, the cache and some other useless stuff)
TMP_GIT_DIR=/tmp/fresh-git
cp -R $TRAVIS_BUILD_DIR $TMP_GIT_DIR && cd $TMP_GIT_DIR && rm -rf var/cache/* app/config/parameters.* #git reset --hard && git clean -xf

if [ $? -ne 0 ]; then
    echo "Could not prepare git environment to copy in the container. Exiting..."
    exit 1
fi

# Wait for it ...
while [[ "$(curl -L -s -o /dev/null -w ''%{http_code}'' localhost:8085)" != "200" ]]; do sleep 5; done

# Copy latests changes on the release content
docker cp $TMP_GIT_DIR upgrade-test:/tmp
docker exec -ti upgrade-test apt -qq update
docker exec -ti upgrade-test apt -qq install -y rsync
docker exec -ti upgrade-test rsync -ar /tmp/fresh-git/ /var/www/html/
docker exec -ti upgrade-test chown root:root -R /var/www/html

# Run SQL upgrade
echo "Running SQL upgrade ..."
docker exec -ti upgrade-test php /var/www/html/install-dev/upgrade/upgrade.php

# Use MySQL tool to find differences between the fresh install & an upgraded database
mysqldiff --server1=root@localhost --server2=root:doge@`docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' upgrade-mysql` \
    --changes-for=server2 --difftype=sql --skip-table-options --force prestashop:upgrade

result=$?
if [ $result -ne 0 ]; then
    echo "There are some structure differences between a fresh install and a migrated shop from $PRESTASHOP_REFERENCE_VERSION. :("
    echo "Please check the upgrade files in install-dev/upgrade/sql/ lead to the same result as install-dev/data/structure.sql."
fi

# Cleanup
docker kill upgrade-test upgrade-mysql
sudo mv -f /etc/mysql/my.cnf.old /etc/mysql/my.cnf && sudo service mysql restart

exit $result